import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'import { Progress } from '@/components/ui/progress'import { Badge } from '@/components/ui/badge'import { Button } from '@/components/ui/button'import { Icons } from '@/components/icons'const projects = [  {    id: '1',    name: 'Website Redesign',    status: 'on_track',    progress,    tasks: {      total,      completed,    },    dueDate: '2023-07-15',    team: [      { name: 'JD', avatar: '/avatars/01.png' },      { name: 'JS', avatar: '/avatars/02.png' },      { name: '+2', avatar: '' },    ],  },  {    id: '2',    name: 'Mobile App Development',    status: 'at_risk',    progress,    tasks: {      total,      completed,    },    dueDate: '2023-08-01',    team: [      { name: 'AJ', avatar: '/avatars/03.png' },      { name: 'MS', avatar: '/avatars/04.png' },    ],  },  {    id: '3',    name: 'API Integration',    status: 'delayed',    progress,    tasks: {      total,      completed,    },    dueDate: '2023-06-30',    team: [      { name: 'TS', avatar: '/avatars/05.png' },      { name: 'RP', avatar: '/avatars/06.png' },    ],  },]const statusVariants = {  on_track: { label: 'On Track', color: 'bg-green-500' },  at_risk: { label: 'At Risk', color: 'bg-yellow-500' },  delayed: { label: 'Delayed', color: 'bg-red-500' },  completed: { label: 'Completed', color: 'bg-blue-500' },}export function ProjectProgress() {  return (    <Card className="col-span-3">      <CardHeader className="flex flex-row items-center justify-between">        Project Progress</CardTitle>          Track the progress of your projects</CardDescription>        </div>        <Button variant="outline" size="sm" className="ml-auto gap-1">          View All          <Icons.chevronRight className="h-4 w-4" />        </Button>      </CardHeader>      <CardContent className="space-y-6">        {projects.map((project) => {          const status = statusVariants[project.status.on_track          const daysRemaining = Math.ceil(            (new Date(project.dueDate).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24)          )          return (            <div key={project.id} className="space-y-2">              <div className="flex items-center justify-between">                <h3 className="font-medium">{project.name}</h3>                <div className="flex items-center space-x-2">                  <Badge variant="outline" className="flex items-center gap-1">                    <span className={`h-2 w-2 rounded-full ${status.color}`} />                    {status.label}                  </Badge>                  <span className="text-sm text-muted-foreground">                    {project.tasks.completed}/{project.tasks.total} tasks                  </span>                </div>              </div>              <div className="space-y-1">                <div className="flex items-center justify-between text-sm">                  <span className="text-muted-foreground">                    {project.progress}% complete                  </span>                  <span className="text-muted-foreground">                    Due in {daysRemaining} {daysRemaining === 1 ? 'day' : 'days'}                  </span>                </div>                <Progress value={project.progress} className="h-2" />              </div>              <div className="flex items-center justify-between pt-2">                <div className="flex -space-x-2">                  {project.team.map((member, i) => (                    <div                      key={i}                      className="inline-flex h-8 w-8 items-center justify-center rounded-full border-2 border-background bg-muted text-xs font-medium"                    >                      {member.avatar ? (                        <img                          src={member.avatar}                          alt={member.name}                          className="h-full w-full rounded-full"                        />                      ) : (                        {member.name}</span>                      )}                    </div>                  ))}                </div>                <Button variant="ghost" size="sm" className="h-8">                  <Icons.chevronRight className="h-4 w-4" />                  <span className="sr-only">View project</span>                </Button>              </div>            </div>          )        })}      </CardContent>    </Card>  )}